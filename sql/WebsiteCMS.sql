CREATE DATABASE IF NOT EXISTS WebsiteCMS;
USE WebsiteCMS;

-- MEDIA table
CREATE TABLE MEDIA (
    media_id INT AUTO_INCREMENT PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    file_type VARCHAR(50) NOT NULL,
    file_size INT NOT NULL,
    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    url TEXT NOT NULL
);

-- PAGE table
CREATE TABLE PAGE (
    page_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- SECTION table
CREATE TABLE SECTION (
    section_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    page_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (page_id) REFERENCES PAGE(page_id) ON DELETE CASCADE
);

-- CONTENTBLOCK table
CREATE TABLE CONTENTBLOCK (
    contentblock_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    section_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (section_id) REFERENCES SECTION(section_id) ON DELETE CASCADE
);

-- MEDIA_CONTENTBLOCK table (for the "holds" relationship)
CREATE TABLE MEDIA_CONTENTBLOCK (
    media_id INT NOT NULL,
    contentblock_id INT NOT NULL,
    PRIMARY KEY (media_id, contentblock_id),
    FOREIGN KEY (media_id) REFERENCES MEDIA(media_id) ON DELETE CASCADE,
    FOREIGN KEY (contentblock_id) REFERENCES CONTENTBLOCK(contentblock_id) ON DELETE CASCADE
);
